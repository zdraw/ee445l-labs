*** EVALUATION ***
ANSI-C/cC++ Compiler for HC12 V-5.0.41 Build 10203, Jul 23 2010

    1:  unsigned short const ADCdata[53]={0,60,72,85,97,110,122,135,148,161,174,
    2:       187,201,214,227,241,255,268,282,296,310,
    3:       324,338,352,366,381,395,409,424,438,453,
    4:       468,482,497,512,527,541,556,571,586,601,
    5:       616,631,646,662,677,692,707,722,737,752,767,1024};
    6:  
    7:  
    8:  unsigned short const Tdata[53]={4000,4000,3960,3920,3880,3840,3800,3760,3720,3680,3640,
    9:       3600,3560,3520,3480,3440,3400,3360,3320,3280,3240,
   10:       3200,3160,3120,3080,3040,3000,2960,2920,2880,2840,
   11:       2800,2760,2720,2680,2640,2600,2560,2520,2480,2440,
   12:       2400,2360,2320,2280,2240,2200,2160,2120,2080,2040,2000,2000};
   13:  
   14:  
   15:  unsigned short Temp_Data(unsigned short adc) {
*** EVALUATION ***

Function: Temp_Data
Source  : C:\Users\Raz\Documents\EE 445L\Lab7\Sources\temperature.c
Options : -Cc -CPUHCS12 -D_HCS12_SERIALMON -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Raz\Documents\EE 445L\Lab7;C:\Users\Raz\Documents\EE 445L\Lab7\bin;C:\Users\Raz\Documents\EE 445L\Lab7\prm;C:\Users\Raz\Documents\EE 445L\Lab7\cmd;C:\Users\Raz\Documents\EE 445L\Lab7\Sources;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=C:\Users\Raz\Documents\EE 445L\Lab7\bin" -Env"TEXTPATH=C:\Users\Raz\Documents\EE 445L\Lab7\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Raz\Documents\EE 445L\Lab7\Lab7_Data\Standard\ObjectCode\temperature.c.o"

  0000 6cac         [2]     STD   4,-SP
   16:    unsigned short temp;
   17:    
   18:    asm ldd adc
  0002 ec80         [3]     LDD   0,SP
   19:    asm Lookup: ldx  #ADCdata  // first find x1<=xL<x2
  0004 ce0000       [2]     LDX   #ADCdata
   20:    asm ldy  #Tdata  
  0007 cd0000       [2]     LDY   #Tdata
   21:    asm lookx1: cpd  2,x      // check xL<x2
  000a ac02         [3]     CPD   2,X
   22:    asm blo  found    // stops when X points to x1
  000c 2506         [3/1]   BCS   *+8 ;abs = 0014
   23:    asm leax 2,x
  000e 1a02         [2]     LEAX  2,X
   24:    asm leay 2,y
  0010 1942         [2]     LEAY  2,Y
   25:    asm bra  lookx1
  0012 20f6         [3]     BRA   *-8 ;abs = 000a
   26:    asm found:   subd 0,x      // xL-x1
  0014 a300         [3]     SUBD  0,X
   27:    asm pshd
  0016 3b           [2]     PSHD  
   28:    asm ldd  2,x      // x2
  0017 ec02         [3]     LDD   2,X
   29:    asm subd 0,x      // D=x2-x1
  0019 a300         [3]     SUBD  0,X
   30:    asm tfr  D,X      // X=x2-x1
  001b b745         [1]     TFR   D,X
   31:    asm puld          // D=(xL-x1) 
  001d 3a           [3]     PULD  
   32:    asm fdiv          // X=(65536*(xL-x1))/(x2-x1)
  001e 1811         [12]    FDIV  
   33:    asm tfr  X,D
  0020 b754         [1]     TFR   X,D
   34:    asm tfr  A,B      
  0022 b701         [1]     TFR   A,B
   35:    // B=(256*(xL-x1))/(x2-x1)
   36:    // Y=>y1,y2
   37:    asm etbl 0,y
  0024 183f40       [10]    ETBL  0,Y
   38:    asm std temp        
  0027 6c82         [2]     STD   2,SP
   39:     
   40:     return temp;
  0029 ec82         [3]     LDD   2,SP
   41:  }
  002b 1b84         [2]     LEAS  4,SP
  002d 3d           [5]     RTS   
