*** EVALUATION ***
ANSI-C/cC++ Compiler for HC12 V-5.0.41 Build 10203, Jul 23 2010

    1:  /*************************PLL.C***************************
    2:  *   boosts the CPU clock to 24 MHz                       *
    3:  *                                                        *
    4:  *   Created by Theodore Deden on 20 January 2004.        *
    5:  *   Modified by Theodore Deden on 9 February 2004.       *
    6:  *   Last Modified by Jonathan Valvano 7/13/07.            *
    7:  *                                                        *
    8:  *   Distributed underthe provisions of the GNU GPL ver 2 *
    9:  *   Copying, redistributing, modifying is encouraged.    *
   10:  *                                                        *
   11:  *********************************************************/
   12:  
   13:  #include "defs.h"
   14:  
   15:  //********* PLL_Init ****************
   16:  // Set 9S12DP512 PLL clock to 24 MHz
   17:  // Inputs: none
   18:  // Outputs: none
   19:  // Errors: will hang if PLL does not stabilize 
   20:  void PLL_Init(void){  
*** EVALUATION ***

Function: PLL_Init
Source  : C:\Users\Raz\Documents\EE 445L\Battleship =(\Sources\PLL.c
Options : -Cc -CPUHCS12 -D_HCS12_SERIALMON -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Raz\Documents\EE 445L\Battleship =(;C:\Users\Raz\Documents\EE 445L\Battleship =(\bin;C:\Users\Raz\Documents\EE 445L\Battleship =(\prm;C:\Users\Raz\Documents\EE 445L\Battleship =(\cmd;C:\Users\Raz\Documents\EE 445L\Battleship =(\Sources;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=C:\Users\Raz\Documents\EE 445L\Battleship =(\bin" -Env"TEXTPATH=C:\Users\Raz\Documents\EE 445L\Battleship =(\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Raz\Documents\EE 445L\Battleship =(\Battleship_=(_Data\Standard\ObjectCode\PLL.c.o" -OnB=b -WmsgSd1106

   21:    SYNR = 0x02;
  0000 ccd102       [2]     LDD   #53506
  0003 5b00         [2]     STAB  _SYNR
   22:    REFDV = 0x01;
  0005 57           [1]     ASRB  
  0006 5b00         [2]     STAB  _REFDV
   23:    
   24:    /*PLLCLK = 2 * OSCCLK * (SYNR + 1) / (REFDV + 1)
   25:               2 *   16   * (  2  + 1) / (  1   + 1)
   26:  	Values above give E clock of 24 MHz with 16 MHz crystal. 
   27:  	(OSCCLK is Crystal Clock Frequency)                    */
   28:    
   29:    CLKSEL = 0x00;
  0008 790000       [3]     CLR   _CLKSEL
   30:    
   31:    /*Meaning for CLKSEL:
   32:    Bit 7: PLLSEL = 0 Keep using OSCCLK until we are ready to switch to PLLCLK
   33:    Bit 6: PSTP   = 0 Do not need to go to Pseudo-Stop Mode
   34:    Bit 5: SYSWAI = 0 In wait mode system clocks stop.
   35:    But 4: ROAWAI = 0 Do not reduce oscillator amplitude in wait mode.
   36:    Bit 3: PLLWAI = 0 Do not turn off PLL in wait mode
   37:    Bit 2: CWAI	= 0 Do not stop the core during wait mode
   38:    Bit 1: RTIWAI = 0 Do not stop the RTI in wait mode
   39:    Bit 0: COPWAI = 0 Do not stop the COP in wait mode
   40:    */
   41:    
   42:    
   43:    PLLCTL = 0xD1;
  000b 5a00         [2]     STAA  _PLLCTL
   44:    
   45:    /*Meaning for PLLCTL:
   46:    Bit 7: CME   = 1; Clock monitor enable - reset if bad clock when set
   47:    Bit 6: PLLON = 1; PLL On bit
   48:    Bit 5: AUTO  = 0; No automatic control of bandwidth, manual through ACQ
   49:    But 4: ACQ   = 1; 1 for high bandwidth filter (acquisition); 0 for low (tracking)
   50:    Bit 3:            (Not Used by 9s12c32)
   51:    Bit 2: PRE   = 0; RTI stops during Pseudo Stop Mode
   52:    Bit 1: PCE   = 0; COP diabled during Pseudo STOP mode
   53:    Bit 0: SCME  = 1; Crystal Clock Failure -> Self Clock mode NOT reset.
   54:    
   55:    */
   56:    
   57:    while((CRGFLG&0x08) == 0){ 	  // Wait for PLLCLK to stabilize.
  000d 4f0008fc     [4]     BRCLR _CRGFLG,#8,*+0 ;abs = 000d
   58:    }  
   59:    CLKSEL_PLLSEL = 1;  // Switch to PLL clock
  0011 4c0080       [4]     BSET  _CLKSEL,#128
   60:  }
  0014 3d           [5]     RTS   
   61:  
   62:  
