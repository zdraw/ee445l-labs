*** EVALUATION ***
ANSI-C/cC++ Compiler for HC12 V-5.0.41 Build 10203, Jul 23 2010

    1:  #include <mc9s12dp512.h>     /* derivative information */
    2:  #include "game.h"
    3:  #include "LCDG.h"
    4:  #include "switch.h"
    5:  
    6:  #define DEBOUNCE_DELAY 30000
    7:  
    8:  #define SINGLE       0
    9:  #define MULTI_XBEE   1
   10:  #define MULTI_SERIAL 2 
   11:  
   12:  #define VERTICAL 0
   13:  #define HORIZONTAL 1
   14:  
   15:  typedef struct {
   16:    unsigned int x:4;
   17:    unsigned int y:4;
   18:    unsigned int orientation:1;
   19:    unsigned int size:3;
   20:  } ShipType; 
   21:  
   22:  typedef struct {
   23:    unsigned int x:4;
   24:    unsigned int y:4;
   25:    unsigned int type:1;
   26:  } AttackType;
   27:  
   28:  struct {
   29:    unsigned int x:4;
   30:    unsigned int y:4;  
   31:  } cursor;
   32:  
   33:  static int mode;
   34:  static int state;
   35:  
   36:  static int buttonFlag;
   37:  
   38:  static ShipType ships[5] = {
   39:    {0, 0, VERTICAL, 2},
   40:    {0, 0, VERTICAL, 3},
   41:    {0, 0, VERTICAL, 3},
   42:    {0, 0, VERTICAL, 4},
   43:    {0, 0, VERTICAL, 5}
   44:  };
   45:  
   46:  static unsigned char field[10][10];
   47:  
   48:  static int numShips;
   49:  
   50:  static AttackType enemyAttacks[100];
   51:  static int numEnemyAttacks;     
   52:  
   53:  static AttackType playerAttacks[100];
   54:  static int numPlayerAttacks;  
   55:  
   56:  void incState(void) {
*** EVALUATION ***

Function: incState
Source  : C:\Users\Raz\Documents\EE 445L\Battleship\Sources\game.c
Options : -Cc -CPUHCS12 -D_HCS12_SERIALMON -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Raz\Documents\EE 445L\Battleship;C:\Users\Raz\Documents\EE 445L\Battleship\bin;C:\Users\Raz\Documents\EE 445L\Battleship\prm;C:\Users\Raz\Documents\EE 445L\Battleship\cmd;C:\Users\Raz\Documents\EE 445L\Battleship\Sources;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Env"TEXTPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Raz\Documents\EE 445L\Battleship\Battleship_Data\Standard\ObjectCode\game.c.o" -WmsgSd1106

   57:    switch(state) {
  0000 fc0000       [3]     LDD   state
  0003 2705         [3/1]   BEQ   *+7 ;abs = 000a
  0005 040407       [3]     DBEQ  D,*+10 ;abs = 000f
  0008 200f         [3]     BRA   *+17 ;abs = 0019
   58:      case WELCOME:  
   59:        state = PICKING_MODE;
  000a c601         [1]     LDAB  #1
  000c 87           [1]     CLRA  
   60:        break;
  000d 2007         [3]     BRA   *+9 ;abs = 0016
   61:      case PICKING_MODE:
   62:        numShips = 1;
  000f c601         [1]     LDAB  #1
  0011 87           [1]     CLRA  
  0012 7c0000       [3]     STD   numShips
   63:        state = PLACING_SHIPS;
  0015 58           [1]     LSLB  
  0016 7c0000       [3]     STD   state
   64:        break;  
   65:    }
   66:    Game_Update();
  0019 060000       [3]     JMP   Game_Update
   67:  }
   68:  
   69:  void Game_Init(void) {
*** EVALUATION ***

Function: Game_Init
Source  : C:\Users\Raz\Documents\EE 445L\Battleship\Sources\game.c
Options : -Cc -CPUHCS12 -D_HCS12_SERIALMON -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Raz\Documents\EE 445L\Battleship;C:\Users\Raz\Documents\EE 445L\Battleship\bin;C:\Users\Raz\Documents\EE 445L\Battleship\prm;C:\Users\Raz\Documents\EE 445L\Battleship\cmd;C:\Users\Raz\Documents\EE 445L\Battleship\Sources;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Env"TEXTPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Raz\Documents\EE 445L\Battleship\Battleship_Data\Standard\ObjectCode\game.c.o" -WmsgSd1106

   70:    state = WELCOME;  
  0000 c7           [1]     CLRB  
  0001 87           [1]     CLRA  
  0002 7c0000       [3]     STD   state
   71:    numShips = 0;
  0005 7c0000       [3]     STD   numShips
   72:    numEnemyAttacks = 0;
  0008 7c0000       [3]     STD   numEnemyAttacks
   73:    numPlayerAttacks = 0;
  000b 7c0000       [3]     STD   numPlayerAttacks
   74:    cursor.x = 0;
  000e 7b0000       [3]     STAB  cursor
   75:    cursor.y =0;
   76:    Game_Update();
  0011 060000       [3]     JMP   Game_Update
   77:  }             
   78:  
   79:  void Game_Update(void) { 
*** EVALUATION ***

Function: Game_Update
Source  : C:\Users\Raz\Documents\EE 445L\Battleship\Sources\game.c
Options : -Cc -CPUHCS12 -D_HCS12_SERIALMON -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Raz\Documents\EE 445L\Battleship;C:\Users\Raz\Documents\EE 445L\Battleship\bin;C:\Users\Raz\Documents\EE 445L\Battleship\prm;C:\Users\Raz\Documents\EE 445L\Battleship\cmd;C:\Users\Raz\Documents\EE 445L\Battleship\Sources;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Env"TEXTPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Raz\Documents\EE 445L\Battleship\Battleship_Data\Standard\ObjectCode\game.c.o" -WmsgSd1106

  0000 1b98         [2]     LEAS  -8,SP
   80:    int i, j;
   81:    
   82:    switch(state) {
  0002 fc0000       [3]     LDD   state
  0005 160000       [4]     JSR   _CASE_CHECKED
  0008 0003         DC.W  3
  000a 0000         DC.W  Game_Update:0x01a4
  000c 0000         DC.W  Game_Update:0x0012
  000e 0000         DC.W  Game_Update:0x003a
  0010 0000         DC.W  Game_Update:0x0085
   83:      case WELCOME:
   84:        LCD_Clear(0);
  0012 c7           [1]     CLRB  
  0013 160000       [4]     JSR   LCD_Clear
   85:        LCD_GoTo(4, 1);
  0016 c604         [1]     LDAB  #4
  0018 87           [1]     CLRA  
  0019 3b           [2]     PSHD  
  001a c601         [1]     LDAB  #1
  001c 160000       [4]     JSR   LCD_GoTo
  001f 3a           [3]     PULD  
   86:        LCD_OutString("Welcome to Battleship");
  0020 cc0000       [2]     LDD   #"Welcome to Battleship"
  0023 160000       [4]     JSR   LCD_OutString
   87:        
   88:        enableOC6(&incState, 62500, 72, 1);
  0026 cc0000       [2]     LDD   #incState
  0029 3b           [2]     PSHD  
  002a ccf424       [2]     LDD   #62500
  002d 3b           [2]     PSHD  
  002e 58           [1]     LSLB  
  002f 87           [1]     CLRA  
  0030 3b           [2]     PSHD  
  0031 c601         [1]     LDAB  #1
  0033 160000       [4]     JSR   enableOC6
  0036 1b86         [2]     LEAS  6,SP
   89:        break;
  0038 2048         [3]     BRA   *+74 ;abs = 0082
   90:      case PICKING_MODE:
   91:        LCD_Clear(0);
  003a c7           [1]     CLRB  
  003b 160000       [4]     JSR   LCD_Clear
   92:        LCD_GoTo(2, 3);
  003e c602         [1]     LDAB  #2
  0040 87           [1]     CLRA  
  0041 3b           [2]     PSHD  
  0042 52           [1]     INCB  
  0043 160000       [4]     JSR   LCD_GoTo
  0046 3a           [3]     PULD  
   93:        LCD_OutString("Single Player");
  0047 cc0000       [2]     LDD   #"Single Player"
  004a 160000       [4]     JSR   LCD_OutString
   94:        LCD_GoTo(4, 3);
  004d c604         [1]     LDAB  #4
  004f 87           [1]     CLRA  
  0050 3b           [2]     PSHD  
  0051 53           [1]     DECB  
  0052 160000       [4]     JSR   LCD_GoTo
  0055 3a           [3]     PULD  
   95:        LCD_OutString("Multiplayer XBee");
  0056 cc0000       [2]     LDD   #"Multiplayer XBee"
  0059 160000       [4]     JSR   LCD_OutString
   96:        LCD_GoTo(6, 3);
  005c c606         [1]     LDAB  #6
  005e 87           [1]     CLRA  
  005f 3b           [2]     PSHD  
  0060 57           [1]     ASRB  
  0061 160000       [4]     JSR   LCD_GoTo
  0064 3a           [3]     PULD  
   97:        LCD_OutString("Multiplayer Wired");
  0065 cc0000       [2]     LDD   #"Multiplayer Wired"
  0068 160000       [4]     JSR   LCD_OutString
   98:        LCD_GoTo((cursor.x+1)*2,1);
  006b f60000       [3]     LDAB  cursor
  006e c40f         [1]     ANDB  #15
  0070 87           [1]     CLRA  
  0071 c30001       [2]     ADDD  #1
  0074 59           [1]     LSLD  
  0075 3b           [2]     PSHD  
  0076 c601         [1]     LDAB  #1
  0078 87           [1]     CLRA  
  0079 160000       [4]     JSR   LCD_GoTo
  007c 3a           [3]     PULD  
   99:        LCD_OutChar(127);
  007d c67f         [1]     LDAB  #127
  007f 160000       [4]     JSR   LCD_OutChar
  100:        break;
  0082 060000       [3]     JMP   Game_Update:0x01a4
  101:      case PLACING_SHIPS:
  102:        LCD_Clear(0);
  0085 c7           [1]     CLRB  
  0086 160000       [4]     JSR   LCD_Clear
  103:        
  104:        for(i=0; i<10; i++) {
  0089 c7           [1]     CLRB  
  008a 87           [1]     CLRA  
  008b 6c84         [2]     STD   4,SP
  105:          for(j=0; j<10; j++) {
  008d c7           [1]     CLRB  
  008e 87           [1]     CLRA  
  008f 6c82         [2]     STD   2,SP
  106:            field[i][j] = EMPTY;      
  0091 c60a         [1]     LDAB  #10
  0093 87           [1]     CLRA  
  0094 ed84         [3]     LDY   4,SP
  0096 13           [3]     EMUL  
  0097 e382         [3]     ADDD  2,SP
  0099 b745         [1]     TFR   D,X
  009b 69e20000     [3]     CLR   field,X
  009f ee82         [3]     LDX   2,SP
  00a1 08           [1]     INX   
  00a2 6e82         [2]     STX   2,SP
  00a4 8e000a       [2]     CPX   #10
  00a7 2de8         [3/1]   BLT   *-22 ;abs = 0091
  00a9 ee84         [3]     LDX   4,SP
  00ab 08           [1]     INX   
  00ac 6e84         [2]     STX   4,SP
  00ae 8e000a       [2]     CPX   #10
  00b1 2dda         [3/1]   BLT   *-36 ;abs = 008d
  107:          }
  108:        }
  109:        
  110:        for(i=0; i<numShips; i++) {
  00b3 c7           [1]     CLRB  
  00b4 87           [1]     CLRA  
  00b5 6c84         [2]     STD   4,SP
  00b7 060000       [3]     JMP   Game_Update:0x0164
  111:          ShipType ship = ships[i];
  00ba ec84         [3]     LDD   4,SP
  00bc 59           [1]     LSLD  
  00bd b745         [1]     TFR   D,X
  00bf ece20000     [4]     LDD   ships,X
  00c3 6c80         [2]     STD   0,SP
  112:          if(ship.orientation == HORIZONTAL) {
  00c5 0f81014d     [4]     BRCLR 1,SP,#1,*+81 ;abs = 0116
  113:            field[ship.x][ship.y] = SHIPEND_LEFT;
  00c9 e680         [3]     LDAB  0,SP
  00cb 160000       [4]     JSR   Game_Update:0x01b0
  00ce 160000       [4]     JSR   Game_Update:0x01a7
  00d1 c603         [1]     LDAB  #3
  00d3 6be20000     [3]     STAB  field,X
  114:            for(j=1; j<ship.size-1; j++) {
  00d7 57           [1]     ASRB  
  00d8 6c82         [2]     STD   2,SP
  00da 2015         [3]     BRA   *+23 ;abs = 00f1
  115:              field[ship.x][ship.y+j] = SHIP_HORIZ;    
  00dc e680         [3]     LDAB  0,SP
  00de 160000       [4]     JSR   Game_Update:0x01b8
  00e1 e382         [3]     ADDD  2,SP
  00e3 b745         [1]     TFR   D,X
  00e5 e680         [3]     LDAB  0,SP
  00e7 160000       [4]     JSR   Game_Update:0x01b0
  00ea 1ae6         [2]     LEAX  D,X
  00ec c606         [1]     LDAB  #6
  00ee 160000       [4]     JSR   Game_Update:0x01c0
  00f1 e681         [3]     LDAB  1,SP
  00f3 c40e         [1]     ANDB  #14
  00f5 54           [1]     LSRB  
  00f6 87           [1]     CLRA  
  00f7 b745         [1]     TFR   D,X
  00f9 830001       [2]     SUBD  #1
  00fc ac82         [3]     CPD   2,SP
  00fe 2edc         [3/1]   BGT   *-34 ;abs = 00dc
  116:            }
  117:            field[ship.x][ship.y+ship.size-1] = SHIPEND_RIGHT;
  0100 e680         [3]     LDAB  0,SP
  0102 160000       [4]     JSR   Game_Update:0x01b8
  0105 1ae6         [2]     LEAX  D,X
  0107 e680         [3]     LDAB  0,SP
  0109 160000       [4]     JSR   Game_Update:0x01b0
  010c 1ae6         [2]     LEAX  D,X
  010e c604         [1]     LDAB  #4
  0110 6be20000     [3]     STAB  field:-1,X
  118:          }
  0114 2049         [3]     BRA   *+75 ;abs = 015f
  119:          else {
  120:            field[ship.x][ship.y] = SHIPEND_UP;
  0116 e680         [3]     LDAB  0,SP
  0118 160000       [4]     JSR   Game_Update:0x01b0
  011b 160000       [4]     JSR   Game_Update:0x01a7
  011e 42           [1]     INCA  
  011f 6ae20000     [3]     STAA  field,X
  121:            for(j=1; j<ship.size-1; j++) {
  0123 b704         [1]     SEX   A,D
  0125 6c82         [2]     STD   2,SP
  0127 2014         [3]     BRA   *+22 ;abs = 013d
  122:              field[ship.x+j][ship.y] = SHIP_VERT;    
  0129 e680         [3]     LDAB  0,SP
  012b c40f         [1]     ANDB  #15
  012d 87           [1]     CLRA  
  012e e382         [3]     ADDD  2,SP
  0130 b746         [1]     TFR   D,Y
  0132 c60a         [1]     LDAB  #10
  0134 87           [1]     CLRA  
  0135 13           [3]     EMUL  
  0136 076f         [4]     BSR   *+113 ;abs = 01a7
  0138 c605         [1]     LDAB  #5
  013a 160000       [4]     JSR   Game_Update:0x01c0
  013d e681         [3]     LDAB  1,SP
  013f c40e         [1]     ANDB  #14
  0141 54           [1]     LSRB  
  0142 b745         [1]     TFR   D,X
  0144 830001       [2]     SUBD  #1
  0147 ac82         [3]     CPD   2,SP
  0149 2ede         [3/1]   BGT   *-32 ;abs = 0129
  123:            }
  124:            field[ship.x+ship.size-1][ship.y] = SHIPEND_DOWN;
  014b e680         [3]     LDAB  0,SP
  014d c40f         [1]     ANDB  #15
  014f 87           [1]     CLRA  
  0150 1ae6         [2]     LEAX  D,X
  0152 c60a         [1]     LDAB  #10
  0154 b756         [1]     TFR   X,Y
  0156 13           [3]     EMUL  
  0157 074e         [4]     BSR   *+80 ;abs = 01a7
  0159 c602         [1]     LDAB  #2
  015b 6be20000     [3]     STAB  field:-10,X
  015f ee84         [3]     LDX   4,SP
  0161 08           [1]     INX   
  0162 6e84         [2]     STX   4,SP
  0164 fc0000       [3]     LDD   numShips
  0167 ac84         [3]     CPD   4,SP
  0169 182eff4d     [4/3]   LBGT  *-175 ;abs = 00ba
  125:          }
  126:        }
  127:        
  128:        for(i=0; i<numEnemyAttacks; i++) {
  016d c7           [1]     CLRB  
  016e 87           [1]     CLRA  
  016f 6c84         [2]     STD   4,SP
  0171 2024         [3]     BRA   *+38 ;abs = 0197
  129:          AttackType attack = enemyAttacks[i];
  0173 ec84         [3]     LDD   4,SP
  0175 59           [1]     LSLD  
  0176 b745         [1]     TFR   D,X
  0178 ece20000     [4]     LDD   enemyAttacks,X
  017c 6c86         [2]     STD   6,SP
  130:          field[attack.x][attack.y] = attack.type;  
  017e e686         [3]     LDAB  6,SP
  0180 072e         [4]     BSR   *+48 ;abs = 01b0
  0182 b745         [1]     TFR   D,X
  0184 e686         [3]     LDAB  6,SP
  0186 0730         [4]     BSR   *+50 ;abs = 01b8
  0188 1ae6         [2]     LEAX  D,X
  018a e687         [3]     LDAB  7,SP
  018c c401         [1]     ANDB  #1
  018e 6be20000     [3]     STAB  field,X
  0192 ee84         [3]     LDX   4,SP
  0194 08           [1]     INX   
  0195 6e84         [2]     STX   4,SP
  0197 fc0000       [3]     LDD   numEnemyAttacks
  019a ac84         [3]     CPD   4,SP
  019c 2ed5         [3/1]   BGT   *-41 ;abs = 0173
  131:        }
  132:          
  133:        LCD_DrawGrid(field);
  019e cc0000       [2]     LDD   #field
  01a1 160000       [4]     JSR   LCD_DrawGrid
  134:        break;
  135:    }
  136:    
  137:    /*
  138:      
  139:      else {
  140:        for(i=0; i<numPlayerAttacks; i++) {
  141:          AttackType attack = playerAttacks[i];
  142:          field[attack.x][attack.y] = attack.type;  
  143:        }
  144:      }
  145:    */
  146:  }
  01a4 1b88         [2]     LEAS  8,SP
  01a6 3d           [5]     RTS   
  01a7 b745         [1]     TFR   D,X
  01a9 e682         [3]     LDAB  2,SP
  01ab 070b         [4]     BSR   *+13 ;abs = 01b8
  01ad 1ae6         [2]     LEAX  D,X
  01af 3d           [5]     RTS   
  01b0 c40f         [1]     ANDB  #15
  01b2 37           [2]     PSHB  
  01b3 c60a         [1]     LDAB  #10
  01b5 32           [3]     PULA  
  01b6 12           [1]     MUL   
  01b7 3d           [5]     RTS   
  01b8 c4f0         [1]     ANDB  #240
  01ba 54           [1]     LSRB  
  01bb 54           [1]     LSRB  
  01bc 54           [1]     LSRB  
  01bd 54           [1]     LSRB  
  01be 87           [1]     CLRA  
  01bf 3d           [5]     RTS   
  01c0 6be20000     [3]     STAB  field,X
  01c4 ee84         [3]     LDX   4,SP
  01c6 08           [1]     INX   
  01c7 6e84         [2]     STX   4,SP
  01c9 3d           [5]     RTS   
  147:  
  148:  int shipInBounds(int index) {
*** EVALUATION ***

Function: shipInBounds
Source  : C:\Users\Raz\Documents\EE 445L\Battleship\Sources\game.c
Options : -Cc -CPUHCS12 -D_HCS12_SERIALMON -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Raz\Documents\EE 445L\Battleship;C:\Users\Raz\Documents\EE 445L\Battleship\bin;C:\Users\Raz\Documents\EE 445L\Battleship\prm;C:\Users\Raz\Documents\EE 445L\Battleship\cmd;C:\Users\Raz\Documents\EE 445L\Battleship\Sources;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Env"TEXTPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Raz\Documents\EE 445L\Battleship\Battleship_Data\Standard\ObjectCode\game.c.o" -WmsgSd1106

  0000 3b           [2]     PSHD  
  149:    ShipType ship = ships[index];
  0001 59           [1]     LSLD  
  0002 b745         [1]     TFR   D,X
  0004 ece20000     [4]     LDD   ships,X
  0008 6c80         [2]     STD   0,SP
  150:    
  151:    if(ship.x < 0 || ship.x > 9 || ship.y < 0 || ship.y > 9 ||
  000a e680         [3]     LDAB  0,SP
  000c c40f         [1]     ANDB  #15
  000e c109         [1]     CMPB  #9
  0010 223c         [3/1]   BHI   *+62 ;abs = 004e
  0012 a680         [3]     LDAA  0,SP
  0014 84f0         [1]     ANDA  #240
  0016 44           [1]     LSRA  
  0017 44           [1]     LSRA  
  0018 44           [1]     LSRA  
  0019 44           [1]     LSRA  
  001a 8109         [1]     CMPA  #9
  001c 2230         [3/1]   BHI   *+50 ;abs = 004e
  152:      (ship.orientation == VERTICAL && ship.x + ship.size > 10) ||
  001e 0e810111     [4]     BRSET 1,SP,#1,*+21 ;abs = 0033
  0022 37           [2]     PSHB  
  0023 e682         [3]     LDAB  2,SP
  0025 c40e         [1]     ANDB  #14
  0027 54           [1]     LSRB  
  0028 87           [1]     CLRA  
  0029 b745         [1]     TFR   D,X
  002b 33           [3]     PULB  
  002c 1ae6         [2]     LEAX  D,X
  002e 8e000a       [2]     CPX   #10
  0031 2e1b         [3/1]   BGT   *+29 ;abs = 004e
  153:      (ship.orientation == HORIZONTAL && ship.y + ship.size > 10)) {
  0033 0f810119     [4]     BRCLR 1,SP,#1,*+29 ;abs = 0050
  0037 e680         [3]     LDAB  0,SP
  0039 c4f0         [1]     ANDB  #240
  003b 54           [1]     LSRB  
  003c 54           [1]     LSRB  
  003d 54           [1]     LSRB  
  003e 54           [1]     LSRB  
  003f 87           [1]     CLRA  
  0040 b745         [1]     TFR   D,X
  0042 e681         [3]     LDAB  1,SP
  0044 c40e         [1]     ANDB  #14
  0046 54           [1]     LSRB  
  0047 1ae6         [2]     LEAX  D,X
  0049 8e000a       [2]     CPX   #10
  004c 2f02         [3/1]   BLE   *+4 ;abs = 0050
  154:        return 0;
  004e c7           [1]     CLRB  
  004f 8f           [2]     SKIP2 
  155:    } 
  156:    
  157:    return 1;
  0050 c601         [1]     LDAB  #1
  0052 87           [1]     CLRA  
  158:  }
  0053 30           [3]     PULX  
  0054 3d           [5]     RTS   
  159:  
  160:  int validShipPos(int index) {
*** EVALUATION ***

Function: validShipPos
Source  : C:\Users\Raz\Documents\EE 445L\Battleship\Sources\game.c
Options : -Cc -CPUHCS12 -D_HCS12_SERIALMON -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Raz\Documents\EE 445L\Battleship;C:\Users\Raz\Documents\EE 445L\Battleship\bin;C:\Users\Raz\Documents\EE 445L\Battleship\prm;C:\Users\Raz\Documents\EE 445L\Battleship\cmd;C:\Users\Raz\Documents\EE 445L\Battleship\Sources;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Env"TEXTPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Raz\Documents\EE 445L\Battleship\Battleship_Data\Standard\ObjectCode\game.c.o" -WmsgSd1106

  0000 6caa         [2]     STD   6,-SP
  0002 1b9d         [2]     LEAS  -3,SP
  161:    ShipType ship = ships[index];
  0004 59           [1]     LSLD  
  0005 b745         [1]     TFR   D,X
  0007 ece20000     [4]     LDD   ships,X
  000b 6c85         [2]     STD   5,SP
  162:    int i;
  163:    
  164:    for(i=0; i<numShips; i++) {
  000d c7           [1]     CLRB  
  000e 87           [1]     CLRA  
  000f 6c87         [2]     STD   7,SP
  0011 060000       [3]     JMP   validShipPos:0x0110
  165:      if(i != index) {
  0014 ec87         [3]     LDD   7,SP
  0016 ac83         [3]     CPD   3,SP
  0018 277f         [3/1]   BEQ   *+129 ;abs = 0099
  166:        if(ship.orientation == HORIZONTAL) {
  001a 0f86017d     [4]     BRCLR 6,SP,#1,*+129 ;abs = 009b
  167:          if(ships[i].orientation == HORIZONTAL) {
  001e 59           [1]     LSLD  
  001f b745         [1]     TFR   D,X
  0021 0fe200000136 [6]     BRCLR ships:1,X,#1,*+60 ;abs = 005d
  168:            if(ship.x == ships[i].x) {
  0027 160000       [4]     JSR   validShipPos:0x013a
  002a 1817         [2]     CBA   
  002c 266b         [3/1]   BNE   *+109 ;abs = 0099
  169:              if(ship.y + ship.size > ships[i].y ||
  002e e685         [3]     LDAB  5,SP
  0030 160000       [4]     JSR   validShipPos:0x0147
  0033 87           [1]     CLRA  
  0034 b746         [1]     TFR   D,Y
  0036 e686         [3]     LDAB  6,SP
  0038 c40e         [1]     ANDB  #14
  003a 54           [1]     LSRB  
  003b 6e81         [2]     STX   1,SP
  003d 1aee         [2]     LEAX  D,Y
  003f e680         [3]     LDAB  0,SP
  0041 160000       [4]     JSR   validShipPos:0x0147
  0044 3b           [2]     PSHD  
  0045 aeb1         [3]     CPX   2,SP+
  0047 2e11         [3/1]   BGT   *+19 ;abs = 005a
  170:                 ship.y < ships[i].y + ships[i].size) {
  0049 ee81         [3]     LDX   1,SP
  004b 3b           [2]     PSHD  
  004c e6e20000     [4]     LDAB  ships:1,X
  0050 c40e         [1]     ANDB  #14
  0052 54           [1]     LSRB  
  0053 e380         [3]     ADDD  0,SP
  0055 3b           [2]     PSHD  
  0056 adb3         [3]     CPY   4,SP+
  0058 2c17         [3/1]   BGE   *+25 ;abs = 0071
  171:                return 0;  
  005a 060000       [3]     JMP   validShipPos:0x0108
  172:              }
  173:            }
  174:          }
  175:          else {
  176:            if(ship.x >= ships[i].x && 
  005d 160000       [4]     JSR   validShipPos:0x013a
  0060 1817         [2]     CBA   
  0062 2520         [3/1]   BCS   *+34 ;abs = 0084
  177:               ship.x < ships[i].x + ships[i].size &&
  0064 b790         [1]     EXG   B,A
  0066 36           [2]     PSHA  
  0067 87           [1]     CLRA  
  0068 160000       [4]     JSR   validShipPos:0x0130
  006b b745         [1]     TFR   D,X
  006d 33           [3]     PULB  
  006e 160000       [4]     JSR   validShipPos:0x014e
  0071 2c69         [3/1]   BGE   *+107 ;abs = 00dc
  178:               ships[i].y >= ship.y &&
  0073 e680         [3]     LDAB  0,SP
  0075 160000       [4]     JSR   validShipPos:0x0147
  0078 a685         [3]     LDAA  5,SP
  007a 84f0         [1]     ANDA  #240
  007c 44           [1]     LSRA  
  007d 44           [1]     LSRA  
  007e 44           [1]     LSRA  
  007f 44           [1]     LSRA  
  0080 b781         [1]     EXG   A,B
  0082 1817         [2]     CBA   
  0084 2556         [3/1]   BCS   *+88 ;abs = 00dc
  179:               ships[i].y < ship.y + ship.size) {
  0086 b790         [1]     EXG   B,A
  0088 36           [2]     PSHA  
  0089 87           [1]     CLRA  
  008a b746         [1]     TFR   D,Y
  008c 33           [3]     PULB  
  008d b745         [1]     TFR   D,X
  008f e686         [3]     LDAB  6,SP
  0091 c40e         [1]     ANDB  #14
  0093 54           [1]     LSRB  
  0094 160000       [4]     JSR   validShipPos:0x014e
  0097 2d41         [3/1]   BLT   *+67 ;abs = 00da
  0099 2070         [3]     BRA   *+114 ;abs = 010b
  180:              return 0;  
  181:            }
  182:          }
  183:        }
  184:        else {
  185:          if(ships[i].orientation == HORIZONTAL) {
  009b 59           [1]     LSLD  
  009c b745         [1]     TFR   D,X
  009e 0fe20000013a [6]     BRCLR ships:1,X,#1,*+64 ;abs = 00de
  186:            if(ship.y >= ships[i].y && 
  00a4 0779         [4]     BSR   *+123 ;abs = 011f
  00a6 1817         [2]     CBA   
  00a8 2561         [3/1]   BCS   *+99 ;abs = 010b
  187:               ship.y < ships[i].y + ships[i].size &&
  00aa b790         [1]     EXG   B,A
  00ac 36           [2]     PSHA  
  00ad 87           [1]     CLRA  
  00ae 3b           [2]     PSHD  
  00af e682         [3]     LDAB  2,SP
  00b1 077d         [4]     BSR   *+127 ;abs = 0130
  00b3 19ee         [2]     LEAY  D,Y
  00b5 35           [2]     PSHY  
  00b6 ec82         [3]     LDD   2,SP
  00b8 acb4         [3]     CPD   5,SP+
  00ba 2c4f         [3/1]   BGE   *+81 ;abs = 010b
  188:               ships[i].x >= ship.x &&
  00bc e680         [3]     LDAB  0,SP
  00be c40f         [1]     ANDB  #15
  00c0 a685         [3]     LDAA  5,SP
  00c2 840f         [1]     ANDA  #15
  00c4 b781         [1]     EXG   A,B
  00c6 1817         [2]     CBA   
  00c8 2541         [3/1]   BCS   *+67 ;abs = 010b
  189:               ships[i].x < ship.x + ship.size) {
  00ca b790         [1]     EXG   B,A
  00cc 36           [2]     PSHA  
  00cd 87           [1]     CLRA  
  00ce b746         [1]     TFR   D,Y
  00d0 e687         [3]     LDAB  7,SP
  00d2 c40e         [1]     ANDB  #14
  00d4 54           [1]     LSRB  
  00d5 b745         [1]     TFR   D,X
  00d7 33           [3]     PULB  
  00d8 0774         [4]     BSR   *+118 ;abs = 014e
  00da 2d2c         [3/1]   BLT   *+46 ;abs = 0108
  190:              return 0;  
  191:            }
  192:          }
  00dc 202d         [3]     BRA   *+47 ;abs = 010b
  193:          else {
  194:            if(ship.y == ships[i].y) {
  00de 073f         [4]     BSR   *+65 ;abs = 011f
  00e0 1817         [2]     CBA   
  00e2 2627         [3/1]   BNE   *+41 ;abs = 010b
  195:              if(ship.x + ship.size > ships[i].x ||
  00e4 e686         [3]     LDAB  6,SP
  00e6 c40e         [1]     ANDB  #14
  00e8 54           [1]     LSRB  
  00e9 87           [1]     CLRA  
  00ea b746         [1]     TFR   D,Y
  00ec e685         [3]     LDAB  5,SP
  00ee c40f         [1]     ANDB  #15
  00f0 19ee         [2]     LEAY  D,Y
  00f2 6c81         [2]     STD   1,SP
  00f4 e680         [3]     LDAB  0,SP
  00f6 c40f         [1]     ANDB  #15
  00f8 3b           [2]     PSHD  
  00f9 adb1         [3]     CPY   2,SP+
  00fb 2e0b         [3/1]   BGT   *+13 ;abs = 0108
  196:                 ship.x < ships[i].x + ships[i].size) {
  00fd 0731         [4]     BSR   *+51 ;abs = 0130
  00ff 19ee         [2]     LEAY  D,Y
  0101 35           [2]     PSHY  
  0102 ec83         [3]     LDD   3,SP
  0104 acb1         [3]     CPD   2,SP+
  0106 2c03         [3/1]   BGE   *+5 ;abs = 010b
  197:                return 0;
  0108 c7           [1]     CLRB  
  0109 2010         [3]     BRA   *+18 ;abs = 011b
  010b ee87         [3]     LDX   7,SP
  010d 08           [1]     INX   
  010e 6e87         [2]     STX   7,SP
  0110 fc0000       [3]     LDD   numShips
  0113 ac87         [3]     CPD   7,SP
  0115 182efefb     [4/3]   LBGT  *-257 ;abs = 0014
  198:              }
  199:            }
  200:          }
  201:        }
  202:      }
  203:    }
  204:    
  205:    return 1;
  0119 c601         [1]     LDAB  #1
  011b 87           [1]     CLRA  
  206:  }
  011c 1b89         [2]     LEAS  9,SP
  011e 3d           [5]     RTS   
  011f a687         [3]     LDAA  7,SP
  0121 84f0         [1]     ANDA  #240
  0123 44           [1]     LSRA  
  0124 44           [1]     LSRA  
  0125 44           [1]     LSRA  
  0126 44           [1]     LSRA  
  0127 e6e20000     [4]     LDAB  ships,X
  012b 6b82         [2]     STAB  2,SP
  012d 0718         [4]     BSR   *+26 ;abs = 0147
  012f 3d           [5]     RTS   
  0130 b746         [1]     TFR   D,Y
  0132 e6e20000     [4]     LDAB  ships:1,X
  0136 c40e         [1]     ANDB  #14
  0138 54           [1]     LSRB  
  0139 3d           [5]     RTS   
  013a a687         [3]     LDAA  7,SP
  013c 840f         [1]     ANDA  #15
  013e e6e20000     [4]     LDAB  ships,X
  0142 6b82         [2]     STAB  2,SP
  0144 c40f         [1]     ANDB  #15
  0146 3d           [5]     RTS   
  0147 c4f0         [1]     ANDB  #240
  0149 54           [1]     LSRB  
  014a 54           [1]     LSRB  
  014b 54           [1]     LSRB  
  014c 54           [1]     LSRB  
  014d 3d           [5]     RTS   
  014e 1ae6         [2]     LEAX  D,X
  0150 34           [2]     PSHX  
  0151 adb1         [3]     CPY   2,SP+
  0153 3d           [5]     RTS   
  207:  
  208:  void flag(void) {
*** EVALUATION ***

Function: flag
Source  : C:\Users\Raz\Documents\EE 445L\Battleship\Sources\game.c
Options : -Cc -CPUHCS12 -D_HCS12_SERIALMON -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Raz\Documents\EE 445L\Battleship;C:\Users\Raz\Documents\EE 445L\Battleship\bin;C:\Users\Raz\Documents\EE 445L\Battleship\prm;C:\Users\Raz\Documents\EE 445L\Battleship\cmd;C:\Users\Raz\Documents\EE 445L\Battleship\Sources;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Env"TEXTPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Raz\Documents\EE 445L\Battleship\Battleship_Data\Standard\ObjectCode\game.c.o" -WmsgSd1106

  209:    buttonFlag = 0;
  0000 c7           [1]     CLRB  
  0001 87           [1]     CLRA  
  0002 7c0000       [3]     STD   buttonFlag
  210:  }
  0005 3d           [5]     RTS   
  211:  
  212:  void Game_DPad(unsigned char direction) {
*** EVALUATION ***

Function: Game_DPad
Source  : C:\Users\Raz\Documents\EE 445L\Battleship\Sources\game.c
Options : -Cc -CPUHCS12 -D_HCS12_SERIALMON -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Raz\Documents\EE 445L\Battleship;C:\Users\Raz\Documents\EE 445L\Battleship\bin;C:\Users\Raz\Documents\EE 445L\Battleship\prm;C:\Users\Raz\Documents\EE 445L\Battleship\cmd;C:\Users\Raz\Documents\EE 445L\Battleship\Sources;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Env"TEXTPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Raz\Documents\EE 445L\Battleship\Battleship_Data\Standard\ObjectCode\game.c.o" -WmsgSd1106

  0000 6ba9         [2]     STAB  7,-SP
  213:    unsigned int tempX, tempY;
  214:    if(!buttonFlag) {
  0002 fc0000       [3]     LDD   buttonFlag
  0005 182600ef     [4/3]   LBNE  *+243 ;abs = 00f8
  215:      switch(state) {
  0009 fc0000       [3]     LDD   state
  000c 8c0001       [2]     CPD   #1
  000f 2708         [3/1]   BEQ   *+10 ;abs = 0019
  0011 8c0002       [2]     CPD   #2
  0014 272a         [3/1]   BEQ   *+44 ;abs = 0040
  0016 060000       [3]     JMP   Game_DPad:0x00e0
  216:        case PICKING_MODE:
  217:          if(direction == UP) {
  0019 e680         [3]     LDAB  0,SP
  001b 2608         [3/1]   BNE   *+10 ;abs = 0025
  218:            cursor.x--;
  001d f60000       [3]     LDAB  cursor
  0020 c40f         [1]     ANDB  #15
  0022 53           [1]     DECB  
  219:          }
  0023 2009         [3]     BRA   *+11 ;abs = 002e
  220:          else if (direction == DOWN) {
  0025 042109       [3]     DBNE  B,*+12 ;abs = 0031
  221:            cursor.x++;  
  0028 f60000       [3]     LDAB  cursor
  002b c40f         [1]     ANDB  #15
  002d 52           [1]     INCB  
  002e 160000       [4]     JSR   Game_DPad:0x010e
  222:          }
  223:          cursor.x %= 3;
  0031 f60000       [3]     LDAB  cursor
  0034 c40f         [1]     ANDB  #15
  0036 8603         [1]     LDAA  #3
  0038 160000       [4]     JSR   _BDIVMODU
  003b 160000       [4]     JSR   Game_DPad:0x010e
  224:          Game_Update();
  225:          break;
  003e 207b         [3]     BRA   *+125 ;abs = 00bb
  226:        case PLACING_SHIPS:
  227:          tempX = ships[numShips-1].x;
  0040 fc0000       [3]     LDD   numShips
  0043 59           [1]     LSLD  
  0044 b745         [1]     TFR   D,X
  0046 e6e20000     [4]     LDAB  ships:-2,X
  004a 37           [2]     PSHB  
  004b c40f         [1]     ANDB  #15
  004d 87           [1]     CLRA  
  004e 6c86         [2]     STD   6,SP
  228:          tempY = ships[numShips-1].y;  
  0050 33           [3]     PULB  
  0051 160000       [4]     JSR   Game_DPad:0x011a
  0054 6c83         [2]     STD   3,SP
  229:          
  230:          do {
  231:            switch(direction) {
  0056 e680         [3]     LDAB  0,SP
  0058 c103         [1]     CMPB  #3
  005a 223f         [3/1]   BHI   *+65 ;abs = 009b
  005c 87           [1]     CLRA  
  005d 160000       [4]     JSR   _CASE_CHECKED_BYTE
  0060 04           DC.B  4
  0061 39           DC.B  57
  0062 04           DC.B  4
  0063 0e           DC.B  14
  0064 1c           DC.B  28
  0065 26           DC.B  38
  232:              case UP:
  233:                ships[numShips-1].x--;
  0066 160000       [4]     JSR   Game_DPad:0x00fb
  0069 c40f         [1]     ANDB  #15
  006b 6b81         [2]     STAB  1,SP
  006d 53           [1]     DECB  
  234:                break;
  006e 2008         [3]     BRA   *+10 ;abs = 0078
  235:              case DOWN:
  236:                ships[numShips-1].x++;
  0070 160000       [4]     JSR   Game_DPad:0x00fb
  0073 c40f         [1]     ANDB  #15
  0075 6b81         [2]     STAB  1,SP
  0077 52           [1]     INCB  
  0078 e800         [3]     EORB  0,X
  007a c40f         [1]     ANDB  #15
  237:                break;
  007c 2019         [3]     BRA   *+27 ;abs = 0097
  238:              case LEFT:
  239:                ships[numShips-1].y--;
  007e 077b         [4]     BSR   *+125 ;abs = 00fb
  0080 160000       [4]     JSR   Game_DPad:0x011a
  0083 6b81         [2]     STAB  1,SP
  0085 53           [1]     DECB  
  240:                break;
  0086 2008         [3]     BRA   *+10 ;abs = 0090
  241:              case RIGHT:
  242:                ships[numShips-1].y++;
  0088 0771         [4]     BSR   *+115 ;abs = 00fb
  008a 160000       [4]     JSR   Game_DPad:0x011a
  008d 6b81         [2]     STAB  1,SP
  008f 52           [1]     INCB  
  0090 8610         [1]     LDAA  #16
  0092 12           [1]     MUL   
  0093 e800         [3]     EORB  0,X
  0095 c4f0         [1]     ANDB  #240
  0097 e800         [3]     EORB  0,X
  0099 6b00         [2]     STAB  0,X
  243:                break;
  244:            }
  245:          }while(!validShipPos(numShips-1) && shipInBounds(numShips-1));          
  009b 076a         [4]     BSR   *+108 ;abs = 0107
  009d 160000       [4]     JSR   validShipPos
  00a0 046408       [3]     TBNE  D,*+11 ;abs = 00ab
  00a3 0762         [4]     BSR   *+100 ;abs = 0107
  00a5 160000       [4]     JSR   shipInBounds
  00a8 0474ab       [3]     TBNE  D,*-82 ;abs = 0056
  246:          
  247:          if(validShipPos(numShips-1) && shipInBounds(numShips-1)) {
  00ab 075a         [4]     BSR   *+92 ;abs = 0107
  00ad 160000       [4]     JSR   validShipPos
  00b0 04440d       [3]     TBEQ  D,*+16 ;abs = 00c0
  00b3 0752         [4]     BSR   *+84 ;abs = 0107
  00b5 160000       [4]     JSR   shipInBounds
  00b8 044405       [3]     TBEQ  D,*+8 ;abs = 00c0
  248:            Game_Update();            
  00bb 160000       [4]     JSR   Game_Update
  00be 2020         [3]     BRA   *+34 ;abs = 00e0
  249:          }
  250:          else {
  251:            ships[numShips-1].x = tempX;
  00c0 0739         [4]     BSR   *+59 ;abs = 00fb
  00c2 e886         [3]     EORB  6,SP
  00c4 c40f         [1]     ANDB  #15
  00c6 e800         [3]     EORB  0,X
  00c8 6b00         [2]     STAB  0,X
  252:            ships[numShips-1].y = tempY;
  00ca 073b         [4]     BSR   *+61 ;abs = 0107
  00cc 58           [1]     LSLB  
  00cd 87           [1]     CLRA  
  00ce c30000       [2]     ADDD  #ships
  00d1 b745         [1]     TFR   D,X
  00d3 c610         [1]     LDAB  #16
  00d5 a684         [3]     LDAA  4,SP
  00d7 12           [1]     MUL   
  00d8 e800         [3]     EORB  0,X
  00da c4f0         [1]     ANDB  #240
  00dc e800         [3]     EORB  0,X
  00de 6b00         [2]     STAB  0,X
  253:          }
  254:          break;
  255:      }
  256:      
  257:      buttonFlag = 1;  
  00e0 c601         [1]     LDAB  #1
  00e2 87           [1]     CLRA  
  00e3 7c0000       [3]     STD   buttonFlag
  258:      enableOC6(&flag, DEBOUNCE_DELAY, 8, 1);
  00e6 ce0000       [2]     LDX   #flag
  00e9 34           [2]     PSHX  
  00ea ce7530       [2]     LDX   #30000
  00ed 34           [2]     PSHX  
  00ee c608         [1]     LDAB  #8
  00f0 3b           [2]     PSHD  
  00f1 c601         [1]     LDAB  #1
  00f3 160000       [4]     JSR   enableOC6
  00f6 1b86         [2]     LEAS  6,SP
  259:    }
  260:  }
  00f8 1b87         [2]     LEAS  7,SP
  00fa 3d           [5]     RTS   
  00fb 070a         [4]     BSR   *+12 ;abs = 0107
  00fd 58           [1]     LSLB  
  00fe 87           [1]     CLRA  
  00ff c30000       [2]     ADDD  #ships
  0102 b745         [1]     TFR   D,X
  0104 e600         [3]     LDAB  0,X
  0106 3d           [5]     RTS   
  0107 fc0000       [3]     LDD   numShips
  010a 830001       [2]     SUBD  #1
  010d 3d           [5]     RTS   
  010e f80000       [3]     EORB  cursor
  0111 c40f         [1]     ANDB  #15
  0113 f80000       [3]     EORB  cursor
  0116 7b0000       [3]     STAB  cursor
  0119 3d           [5]     RTS   
  011a c4f0         [1]     ANDB  #240
  011c 54           [1]     LSRB  
  011d 54           [1]     LSRB  
  011e 54           [1]     LSRB  
  011f 54           [1]     LSRB  
  0120 3d           [5]     RTS   
  261:  
  262:  void Game_A(void) {
*** EVALUATION ***

Function: Game_A
Source  : C:\Users\Raz\Documents\EE 445L\Battleship\Sources\game.c
Options : -Cc -CPUHCS12 -D_HCS12_SERIALMON -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Raz\Documents\EE 445L\Battleship;C:\Users\Raz\Documents\EE 445L\Battleship\bin;C:\Users\Raz\Documents\EE 445L\Battleship\prm;C:\Users\Raz\Documents\EE 445L\Battleship\cmd;C:\Users\Raz\Documents\EE 445L\Battleship\Sources;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Env"TEXTPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Raz\Documents\EE 445L\Battleship\Battleship_Data\Standard\ObjectCode\game.c.o" -WmsgSd1106

  263:    if(!buttonFlag) {
  0000 fc0000       [3]     LDD   buttonFlag
  0003 263f         [3/1]   BNE   *+65 ;abs = 0044
  264:      switch(state) {
  0005 fc0000       [3]     LDD   state
  0008 8c0001       [2]     CPD   #1
  000b 2707         [3/1]   BEQ   *+9 ;abs = 0014
  000d 8c0002       [2]     CPD   #2
  0010 2710         [3/1]   BEQ   *+18 ;abs = 0022
  0012 2018         [3]     BRA   *+26 ;abs = 002c
  265:        case PICKING_MODE:
  266:          mode = cursor.x;
  0014 f60000       [3]     LDAB  cursor
  0017 c40f         [1]     ANDB  #15
  0019 87           [1]     CLRA  
  001a 7c0000       [3]     STD   mode
  267:          incState();
  001d 160000       [4]     JSR   incState
  268:          break;        
  0020 200a         [3]     BRA   *+12 ;abs = 002c
  269:        case PLACING_SHIPS:
  270:          numShips++;
  0022 fe0000       [3]     LDX   numShips
  0025 08           [1]     INX   
  0026 7e0000       [3]     STX   numShips
  271:          Game_Update(); 
  0029 160000       [4]     JSR   Game_Update
  272:          break;
  273:      }
  274:      buttonFlag = 1;
  002c c601         [1]     LDAB  #1
  002e 87           [1]     CLRA  
  002f 7c0000       [3]     STD   buttonFlag
  275:      enableOC6(&flag, DEBOUNCE_DELAY, 8, 1);
  0032 ce0000       [2]     LDX   #flag
  0035 34           [2]     PSHX  
  0036 ce7530       [2]     LDX   #30000
  0039 34           [2]     PSHX  
  003a c608         [1]     LDAB  #8
  003c 3b           [2]     PSHD  
  003d c601         [1]     LDAB  #1
  003f 160000       [4]     JSR   enableOC6
  0042 1b86         [2]     LEAS  6,SP
  276:    } 
  277:    
  278:  }
  0044 3d           [5]     RTS   
  279:  
  280:  void Game_B(void) {
*** EVALUATION ***

Function: Game_B
Source  : C:\Users\Raz\Documents\EE 445L\Battleship\Sources\game.c
Options : -Cc -CPUHCS12 -D_HCS12_SERIALMON -D__NO_FLOAT__ -Env"GENPATH=C:\Users\Raz\Documents\EE 445L\Battleship;C:\Users\Raz\Documents\EE 445L\Battleship\bin;C:\Users\Raz\Documents\EE 445L\Battleship\prm;C:\Users\Raz\Documents\EE 445L\Battleship\cmd;C:\Users\Raz\Documents\EE 445L\Battleship\Sources;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files\Freescale\CWS12v5.1\lib\HC12c\include" -Env"OBJPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Env"TEXTPATH=C:\Users\Raz\Documents\EE 445L\Battleship\bin" -Lasm=%n.lst -Ms -ObjN="C:\Users\Raz\Documents\EE 445L\Battleship\Battleship_Data\Standard\ObjectCode\game.c.o" -WmsgSd1106

  281:    if(!buttonFlag) {
  0000 fc0000       [3]     LDD   buttonFlag
  0003 2638         [3/1]   BNE   *+58 ;abs = 003d
  282:      switch(state) {
  0005 fc0000       [3]     LDD   state
  0008 8c0002       [2]     CPD   #2
  000b 2630         [3/1]   BNE   *+50 ;abs = 003d
  283:        case PLACING_SHIPS:
  284:          ships[numShips-1].orientation ^= 1;
  000d 072f         [4]     BSR   *+49 ;abs = 003e
  285:          if(validShipPos(numShips-1) && shipInBounds(numShips-1)) {
  000f 073d         [4]     BSR   *+63 ;abs = 004e
  0011 160000       [4]     JSR   validShipPos
  0014 04440c       [3]     TBEQ  D,*+15 ;abs = 0023
  0017 0735         [4]     BSR   *+55 ;abs = 004e
  0019 160000       [4]     JSR   shipInBounds
  001c 044404       [3]     TBEQ  D,*+7 ;abs = 0023
  286:            Game_Update();          
  001f 160000       [4]     JSR   Game_Update
  287:          }
  0022 8f           [2]     SKIP2 
  288:          else {
  289:            ships[numShips-1].orientation ^= 1;
  0023 0719         [4]     BSR   *+27 ;abs = 003e
  290:          }
  291:          buttonFlag = 1;
  0025 c601         [1]     LDAB  #1
  0027 87           [1]     CLRA  
  0028 7c0000       [3]     STD   buttonFlag
  292:          enableOC6(&flag, DEBOUNCE_DELAY, 8, 1);
  002b ce0000       [2]     LDX   #flag
  002e 34           [2]     PSHX  
  002f ce7530       [2]     LDX   #30000
  0032 34           [2]     PSHX  
  0033 c608         [1]     LDAB  #8
  0035 3b           [2]     PSHD  
  0036 c601         [1]     LDAB  #1
  0038 160000       [4]     JSR   enableOC6
  003b 1b86         [2]     LEAS  6,SP
  293:          break;
  294:      }
  295:    } 
  296:  }
  003d 3d           [5]     RTS   
  003e 070e         [4]     BSR   *+16 ;abs = 004e
  0040 58           [1]     LSLB  
  0041 87           [1]     CLRA  
  0042 c30000       [2]     ADDD  #ships
  0045 b745         [1]     TFR   D,X
  0047 e601         [3]     LDAB  1,X
  0049 c801         [1]     EORB  #1
  004b 6b01         [2]     STAB  1,X
  004d 3d           [5]     RTS   
  004e fc0000       [3]     LDD   numShips
  0051 830001       [2]     SUBD  #1
  0054 3d           [5]     RTS   
